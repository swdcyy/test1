package com.facebook.react.bridge.CatalystInstance;
import com.facebook.react.bridge.MemoryPressureListener;
import com.facebook.react.bridge.JSInstance;
import com.facebook.react.bridge.JSBundleLoaderDelegate;
import com.facebook.react.bridge.MemoryStatsProvider;
import com.facebook.react.bridge.NotThreadSafeBridgeIdleDebugListener;
import com.facebook.react.bridge.BridgeInvokeListener;
import java.util.List;
import java.lang.String;
import com.facebook.react.bridge.NativeArray;
import com.facebook.react.bridge.CatalystInstance$DestroyFinishedCallback;
import com.facebook.react.bridge.NativeModuleRegistry;
import com.facebook.react.bridge.BridgeHookInvoked;
import com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder;
import com.facebook.react.bridge.JSIModuleType;
import com.facebook.react.bridge.JSIModule;
import java.lang.Class;
import com.facebook.react.bridge.JavaScriptModule;
import com.facebook.react.bridge.JavaScriptContextHolder;
import com.facebook.react.bridge.JavaScriptExecutor;
import com.facebook.react.bridge.NativeModule;
import java.util.Collection;
import com.facebook.react.bridge.queue.ReactQueueConfiguration;
import com.facebook.react.bridge.NativeArrayInterface;
import java.lang.Boolean;
import com.facebook.react.bridge.NativeModuleDidNotFindHandler;

public interface abstract CatalystInstance implements MemoryPressureListener, JSInstance, JSBundleLoaderDelegate, MemoryStatsProvider	// class@0011a4
{

    void addBridgeIdleDebugListener(NotThreadSafeBridgeIdleDebugListener p0);
    void addBridgeInvokeListener(BridgeInvokeListener p0);
    void addJSIModules(List p0);
    void callFunction(String p0,String p1,NativeArray p2);
    void destroy(CatalystInstance$DestroyFinishedCallback p0);
    boolean enableReportLoadMonitor();
    void extendNativeModules(NativeModuleRegistry p0);
    boolean finishDestroyed();
    BridgeHookInvoked getBridgeHookInvoked();
    List getBridgeInvokeListeners();
    CallInvokerHolder getJSCallInvokerHolder();
    JSIModule getJSIModule(JSIModuleType p0);
    JavaScriptModule getJSModule(Class p0);
    JavaScriptContextHolder getJavaScriptContextHolder();
    JavaScriptExecutor getJsExecutor();
    boolean getMultiReactRootViewDispatcherFilter();
    CallInvokerHolder getNativeCallInvokerHolder();
    NativeModule getNativeModule(Class p0);
    NativeModule getNativeModule(String p0);
    Collection getNativeModules();
    ReactQueueConfiguration getReactQueueConfiguration();
    String getSourceFilePath();
    String getSourceURL();
    int getUniqueId();
    boolean hasNativeModule(Class p0);
    boolean hasRunJSBundle();
    void initialize();
    void invokeCallback(int p0,NativeArrayInterface p1);
    void invokeCallback(Boolean p0,int p1,NativeArrayInterface p2);
    boolean isDestroyed();
    void registerSegment(int p0,String p1);
    void removeBridgeIdleDebugListener(NotThreadSafeBridgeIdleDebugListener p0);
    void removeBridgeInvokeListener(BridgeInvokeListener p0);
    void runJSBundle();
    void setBridgeHookInvoked(BridgeHookInvoked p0);
    void setDestroyFinishedCallback(CatalystInstance$DestroyFinishedCallback p0);
    void setDidNotFindHandler(NativeModuleDidNotFindHandler p0);
    void setGlobalVariable(String p0,String p1);
    void setMultiReactRootViewDispatcherFilter(boolean p0);
    void setReportLoadMonitor(boolean p0);
    void setTurboModuleManager(JSIModule p0);
    boolean useDeveloperSupport();
}
