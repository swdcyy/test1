package com.daimajia.easing.Skill;
import java.lang.Enum;
import com.daimajia.easing.back.BackEaseIn;
import java.lang.String;
import java.lang.Class;
import com.daimajia.easing.back.BackEaseOut;
import com.daimajia.easing.back.BackEaseInOut;
import com.daimajia.easing.bounce.BounceEaseIn;
import com.daimajia.easing.bounce.BounceEaseOut;
import com.daimajia.easing.bounce.BounceEaseInOut;
import com.daimajia.easing.circ.CircEaseIn;
import com.daimajia.easing.circ.CircEaseOut;
import com.daimajia.easing.circ.CircEaseInOut;
import com.daimajia.easing.cubic.CubicEaseIn;
import com.daimajia.easing.cubic.CubicEaseOut;
import com.daimajia.easing.cubic.CubicEaseInOut;
import com.daimajia.easing.elastic.ElasticEaseIn;
import com.daimajia.easing.elastic.ElasticEaseOut;
import com.daimajia.easing.expo.ExpoEaseIn;
import com.daimajia.easing.expo.ExpoEaseOut;
import com.daimajia.easing.expo.ExpoEaseInOut;
import com.daimajia.easing.quad.QuadEaseIn;
import com.daimajia.easing.quad.QuadEaseOut;
import com.daimajia.easing.quad.QuadEaseInOut;
import com.daimajia.easing.quint.QuintEaseIn;
import com.daimajia.easing.quint.QuintEaseOut;
import com.daimajia.easing.quint.QuintEaseInOut;
import com.daimajia.easing.sine.SineEaseIn;
import com.daimajia.easing.sine.SineEaseOut;
import com.daimajia.easing.sine.SineEaseInOut;
import com.daimajia.easing.linear.Linear;
import java.lang.Object;
import com.daimajia.easing.BaseEasingMethod;
import java.lang.Float;
import java.lang.reflect.Constructor;
import java.lang.Exception;
import java.lang.Error;

public final class Skill extends Enum	// class@000f8a
{
    public Class easingMethod;
    public static final Skill[] $VALUES;
    public static final Skill BackEaseIn;
    public static final Skill BackEaseInOut;
    public static final Skill BackEaseOut;
    public static final Skill BounceEaseIn;
    public static final Skill BounceEaseInOut;
    public static final Skill BounceEaseOut;
    public static final Skill CircEaseIn;
    public static final Skill CircEaseInOut;
    public static final Skill CircEaseOut;
    public static final Skill CubicEaseIn;
    public static final Skill CubicEaseInOut;
    public static final Skill CubicEaseOut;
    public static final Skill ElasticEaseIn;
    public static final Skill ElasticEaseOut;
    public static final Skill ExpoEaseIn;
    public static final Skill ExpoEaseInOut;
    public static final Skill ExpoEaseOut;
    public static final Skill Linear;
    public static final Skill QuadEaseIn;
    public static final Skill QuadEaseInOut;
    public static final Skill QuadEaseOut;
    public static final Skill QuintEaseIn;
    public static final Skill QuintEaseInOut;
    public static final Skill QuintEaseOut;
    public static final Skill SineEaseIn;
    public static final Skill SineEaseInOut;
    public static final Skill SineEaseOut;

    static {
       Skill skill = new Skill("BackEaseIn", 0, BackEaseIn.class);
       Skill.BackEaseIn = skill;
       Skill skill1 = new Skill("BackEaseOut", 1, BackEaseOut.class);
       Skill.BackEaseOut = skill1;
       Skill skill2 = new Skill("BackEaseInOut", 2, BackEaseInOut.class);
       Skill.BackEaseInOut = skill2;
       Skill skill3 = new Skill("BounceEaseIn", 3, BounceEaseIn.class);
       Skill.BounceEaseIn = skill3;
       Skill skill4 = new Skill("BounceEaseOut", 4, BounceEaseOut.class);
       Skill.BounceEaseOut = skill4;
       Skill skill5 = new Skill("BounceEaseInOut", 5, BounceEaseInOut.class);
       Skill.BounceEaseInOut = skill5;
       Skill skill6 = new Skill("CircEaseIn", 6, CircEaseIn.class);
       Skill.CircEaseIn = skill6;
       Skill skill7 = new Skill("CircEaseOut", 7, CircEaseOut.class);
       Skill.CircEaseOut = skill7;
       Skill skill8 = new Skill("CircEaseInOut", 8, CircEaseInOut.class);
       Skill.CircEaseInOut = skill8;
       Skill skill9 = new Skill("CubicEaseIn", 9, CubicEaseIn.class);
       Skill.CubicEaseIn = skill9;
       Skill skill10 = new Skill("CubicEaseOut", 10, CubicEaseOut.class);
       Skill.CubicEaseOut = skill10;
       Skill skill11 = new Skill("CubicEaseInOut", 11, CubicEaseInOut.class);
       Skill.CubicEaseInOut = skill11;
       Skill skill12 = new Skill("ElasticEaseIn", 12, ElasticEaseIn.class);
       Skill.ElasticEaseIn = skill12;
       Skill skill13 = skill12;
       Skill skill14 = new Skill("ElasticEaseOut", 13, ElasticEaseOut.class);
       Skill.ElasticEaseOut = skill14;
       Skill skill15 = skill14;
       Skill skill16 = new Skill("ExpoEaseIn", 14, ExpoEaseIn.class);
       Skill.ExpoEaseIn = skill16;
       Skill skill17 = skill16;
       skill12 = new Skill("ExpoEaseOut", 15, ExpoEaseOut.class);
       Skill.ExpoEaseOut = skill12;
       Skill skill18 = skill12;
       skill14 = new Skill("ExpoEaseInOut", 16, ExpoEaseInOut.class);
       Skill.ExpoEaseInOut = skill14;
       Skill skill19 = skill14;
       skill16 = new Skill("QuadEaseIn", 17, QuadEaseIn.class);
       Skill.QuadEaseIn = skill16;
       Skill skill20 = skill16;
       skill12 = new Skill("QuadEaseOut", 18, QuadEaseOut.class);
       Skill.QuadEaseOut = skill12;
       Skill skill21 = skill12;
       skill14 = new Skill("QuadEaseInOut", 19, QuadEaseInOut.class);
       Skill.QuadEaseInOut = skill14;
       Skill skill22 = skill14;
       skill16 = new Skill("QuintEaseIn", 20, QuintEaseIn.class);
       Skill.QuintEaseIn = skill16;
       Skill skill23 = skill16;
       skill12 = new Skill("QuintEaseOut", 21, QuintEaseOut.class);
       Skill.QuintEaseOut = skill12;
       Skill skill24 = skill12;
       skill14 = new Skill("QuintEaseInOut", 22, QuintEaseInOut.class);
       Skill.QuintEaseInOut = skill14;
       Skill skill25 = skill14;
       skill16 = new Skill("SineEaseIn", 23, SineEaseIn.class);
       Skill.SineEaseIn = skill16;
       Skill skill26 = skill16;
       skill14 = new Skill("SineEaseOut", 24, SineEaseOut.class);
       Skill.SineEaseOut = skill14;
       Skill skill27 = skill14;
       skill16 = new Skill("SineEaseInOut", 25, SineEaseInOut.class);
       Skill.SineEaseInOut = skill16;
       Skill skill28 = skill16;
       skill14 = new Skill("Linear", 26, Linear.class);
       Skill.Linear = skill14;
       Skill[] skillArray = new Skill[27];
       skillArray[0] = skill;
       skillArray[1] = skill1;
       skillArray[2] = skill2;
       skillArray[3] = skill3;
       skillArray[4] = skill4;
       skillArray[5] = skill5;
       skillArray[6] = skill6;
       skillArray[7] = skill7;
       skillArray[8] = skill8;
       skillArray[9] = skill9;
       skillArray[10] = skill10;
       skillArray[11] = skill11;
       skillArray[12] = skill13;
       skillArray[13] = skill15;
       skillArray[14] = skill17;
       skillArray[15] = skill18;
       skillArray[16] = skill19;
       skillArray[17] = skill20;
       skillArray[18] = skill21;
       skillArray[19] = skill22;
       skillArray[20] = skill23;
       skillArray[21] = skill24;
       skillArray[22] = skill25;
       skillArray[23] = skill26;
       skillArray[24] = skill27;
       skillArray[25] = skill28;
       skillArray[26] = skill14;
       Skill.$VALUES = skillArray;
    }
    public void Skill(String p0,int p1,Class p2){
       super(p0, p1);
       this.easingMethod = p2;
    }
    public static Skill valueOf(String p0){
       return Enum.valueOf(Skill.class, p0);
    }
    public static Skill[] values(){
       return Skill.$VALUES.clone();
    }
    public BaseEasingMethod getMethod(float p0){
       try{
          Class[] uClassArray = new Class[]{Float.TYPE};
          Object[] objArray = new Object[]{Float.valueOf(p0)};
          return this.easingMethod.getConstructor(uClassArray).newInstance(objArray);
       }catch(java.lang.Exception e6){
          e6.printStackTrace();
          throw new Error("Can not init easingMethod instance");
       }
    }
}
