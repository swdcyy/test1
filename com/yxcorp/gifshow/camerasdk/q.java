package com.yxcorp.gifshow.camerasdk.q;
import aj9.b;
import com.kwai.camerasdk.videoCapture.CameraController;
import java.lang.String;
import com.kwai.camerasdk.FrameRateAdapterCallback;
import com.yxcorp.gifshow.model.MagicEmoji$MagicFace;
import com.kwai.video.westeros.v2.faceless.FaceMagicController$FaceMagicRecordingControlListener;
import m65.f;
import com.kwai.camerasdk.render.VideoTextureView;
import qi9.u1;
import qi9.t1;
import android.content.Context;
import com.kwai.gifshow.post.api.core.camerasdk.model.VideoContext;
import zi9.f$a;
import com.kwai.camerasdk.models.VideoSourceLayout;
import com.kwai.camerasdk.render.VideoViewListener;
import com.yxcorp.gifshow.camerasdk.TakePictureSource;
import qi9.o1;
import gxc.c;
import android.graphics.RectF;
import com.kwai.camerasdk.preprocess.AudioProcessor;
import yi9.a;
import com.kwai.camerasdk.preprocess.DynamicExtractFrameProcessor;
import com.yxcorp.gifshow.camerasdk.j$p;
import qi9.s1;
import com.kwai.camerasdk.videoCapture.CameraController$d;
import com.kwai.camerasdk.a$e;
import com.kwai.camerasdk.models.DisplayLayout;
import com.kwai.camerasdk.models.CaptureImageMode;
import com.kwai.camerasdk.models.Business;
import p65.g;
import qi9.a;
import l65.a;
import com.kwai.video.westeros.veplugin.VEPlugin$OnDirtyLensDetectionListener;
import qi9.c;
import ui9.b;
import com.kwai.video.westeros.v2.faceless.FaceMagicController;
import ui9.c;
import ui9.e;
import ui9.j;
import qi9.r1;
import i65.b;
import com.yxcorp.gifshow.camerasdk.p$a;
import com.yxcorp.gifshow.camerasdk.p$c;
import com.kwai.camerasdk.models.PreviewStats;
import com.yxcorp.gifshow.camerasdk.p$b;
import ui9.f;
import android.graphics.Rect;
import aj9.f;
import com.kwai.camerasdk.models.MediaRecorderCallbackFrameType;
import brd.t;
import xo4.a;
import com.kwai.video.westeros.models.VEFeatureParams;
import com.kwai.video.westeros.veplugin.VEPlugin$OnFrameColorListener;

public abstract class q extends CameraController implements b	// class@00103e
{

    public void q(){
       super();
    }
    public abstract String A();
    public abstract void A0(FrameRateAdapterCallback p0);
    public abstract void B0(boolean p0);
    public abstract void C0(boolean p0);
    public abstract void D0(byte[] p0,int p1,int p2);
    public abstract void E0(String p0);
    public abstract void F0(MagicEmoji$MagicFace p0,String p1);
    public abstract void G0(FaceMagicController$FaceMagicRecordingControlListener p0);
    public abstract void H0(float p0);
    public abstract void I0(String p0);
    public abstract String J();
    public abstract void J0(f p0,VideoTextureView p1);
    public abstract boolean K();
    public abstract void K0(u1 p0);
    public abstract void L();
    public abstract void L0(boolean p0);
    public abstract boolean M();
    public abstract void M0(t1 p0);
    public abstract boolean N(Context p0);
    public abstract void N0(VideoContext p0);
    public abstract boolean O(int p0,int p1,int p2);
    public abstract void O0(int p0);
    public abstract boolean P();
    public abstract void P0(int p0);
    public abstract boolean Q();
    public abstract void Q0(String p0,String p1);
    public abstract boolean R();
    public abstract void R0(f$a p0);
    public abstract boolean S();
    public abstract void S0(VideoSourceLayout p0);
    public abstract boolean T();
    public abstract void T0(VideoViewListener p0);
    public abstract boolean U(TakePictureSource p0);
    public abstract void U0(f p0);
    public abstract boolean V();
    public abstract void V0();
    public abstract void W();
    public abstract void W0(o1 p0);
    public abstract void X();
    public abstract void X0(c p0,RectF p1);
    public abstract void Y();
    public abstract void Y0(String p0);
    public abstract void Z(AudioProcessor p0);
    public abstract boolean Z0(a p0);
    public abstract void a(AudioProcessor p0);
    public abstract void a0(DynamicExtractFrameProcessor p0);
    public abstract void a1();
    public abstract void b(j$p p0);
    public abstract void b0();
    public abstract void b1();
    public abstract void c0(s1 p0);
    public abstract void c1();
    public abstract void d0(CameraController$d p0);
    public abstract void d1();
    public abstract void e0();
    public abstract void e1(a$e p0,int p1,int p2,DisplayLayout p3,TakePictureSource p4,CaptureImageMode p5,int p6,boolean p7);
    public abstract void f(j$p p0);
    public abstract void f0(Business p0);
    public abstract boolean f1(g p0,int p1,int p2,DisplayLayout p3,TakePictureSource p4,CaptureImageMode p5,int p6);
    public abstract void g(DynamicExtractFrameProcessor p0);
    public abstract void g0(a p0);
    public abstract boolean g1(g p0,int p1,int p2,DisplayLayout p3,TakePictureSource p4,CaptureImageMode p5,int p6,boolean p7);
    public abstract void h(a p0);
    public abstract void h0(int p0);
    public abstract void h1(int p0,int p1);
    public abstract void i(s1 p0);
    public abstract void i0(String p0);
    public abstract boolean isClosed();
    public abstract boolean isRecording();
    public abstract void j(CameraController$d p0);
    public abstract void j0(VEPlugin$OnDirtyLensDetectionListener p0);
    public abstract boolean k(g p0,int p1,int p2,DisplayLayout p3,CaptureImageMode p4);
    public abstract void k0(boolean p0);
    public abstract void l();
    public abstract boolean l0(String p0);
    public abstract void m();
    public abstract void m0(boolean p0);
    public abstract c n();
    public abstract void n0(b p0);
    public abstract FaceMagicController o();
    public abstract void o0(c p0);
    public abstract String p();
    public abstract void p0(e p0);
    public abstract j q();
    public abstract void q0(boolean p0,r1 p1);
    public abstract void r(s1 p0);
    public abstract void r0(boolean p0);
    public void reset(){
    }
    public abstract b s();
    public abstract void s0(boolean p0);
    public abstract String t();
    public abstract void t0(p$a p0,p$c p1);
    public abstract PreviewStats u();
    public abstract void u0(p$b p0);
    public void updateFps(int p0,int p1){
    }
    public abstract f v();
    public abstract boolean v0(Rect p0,int p1,int p2);
    public abstract void w(f p0,MediaRecorderCallbackFrameType p1);
    public abstract t w0(Rect p0,int p1,int p2);
    public abstract a x();
    public abstract void x0(boolean p0);
    public abstract VideoContext y();
    public abstract void y0(boolean p0,VEFeatureParams p1);
    public abstract String z();
    public abstract void z0(VEPlugin$OnFrameColorListener p0);
}
