package com.kwai.video.wayne.player.main.IWaynePlayer;
import com.kwai.video.wayne.player.main.IPlayerListener;
import com.kwai.video.wayne.player.main.IMediaPlayerApi;
import com.kwai.player.debuginfo.KwaiPlayerDebugInfoProvider;
import com.kwai.video.wayne.player.logreport.DataReporter;
import com.kwai.video.wayne.player.listeners.OnPlayerActualPlayingChangedListener;
import java.lang.String;
import com.kwai.video.wayne.player.main.IWaynePlayer$DataSourceFrom;
import java.lang.Object;
import com.kwai.video.player.IKwaiMediaPlayer;
import java.util.List;
import java.lang.Integer;
import com.kwai.video.wayne.player.main.PlayerState;
import com.kwai.video.wayne.player.builder.WayneBuildData;
import android.view.SurfaceHolder;
import com.kwai.video.wayne.player.multisource.switcher.DataSourceFetcher;
import com.kwai.video.wayne.player.main.OnErrorRetryListener;
import android.view.Surface;
import com.kwai.player.debuginfo.IDebugView;
import com.kwai.video.wayne.player.subtitle.IVodSubtitleListener;
import android.graphics.RectF;
import com.kwai.video.wayne.player.danmakumask.KSRenderType;
import com.kwai.video.wayne.player.builder.WayneVideoContext;

public interface abstract IWaynePlayer implements IPlayerListener, IMediaPlayerApi, KwaiPlayerDebugInfoProvider	// class@000d66
{

    void addDataReporter(DataReporter p0);
    void addOnPlayerActualPlayingChangedListener(OnPlayerActualPlayingChangedListener p0);
    int addSubtitle(String p0,boolean p1);
    void addVseDataReporter(DataReporter p0);
    void enableDanmakuMask(boolean p0);
    String getCurrentPlayUrl();
    IWaynePlayer$DataSourceFrom getDataSourceFrom();
    Object getExtra(String p0);
    IKwaiMediaPlayer getKernelPlayer();
    long getKernelPlayerId();
    String getOuterLogTag();
    int getPlayerId();
    int getPlayerType();
    List getQualityList();
    int getRealRepresentationId();
    Integer getRepIdFromQualityType(String p0);
    int getRetryCount();
    String getRetryDebugInfo();
    PlayerState getState();
    int getUserRepresentationId();
    WayneBuildData getWaynePlayerBuildData();
    boolean isActualPlaying();
    boolean isAudioRenderingStart();
    boolean isBuffering();
    boolean isHlsManifestSource();
    boolean isLoading();
    boolean isLooping();
    boolean isNativeBuffering();
    boolean isPaused();
    boolean isPlaying();
    boolean isPrepared();
    boolean isRetrying();
    boolean isSupportRepresentation();
    boolean isVideoRenderingStart();
    void play();
    void putExtra(String p0,Object p1);
    void releaseKernel();
    void removeDataReporter(DataReporter p0);
    Object removeExtra(String p0);
    void removeOnPlayerActualPlayingChangedListener(OnPlayerActualPlayingChangedListener p0);
    void removeVseDataReporter(DataReporter p0);
    void resetDanmakuMask();
    void restart(long p0);
    void restoreKernel();
    void retryPlayback(String p0);
    void setDisplay(SurfaceHolder p0);
    void setFetcher(DataSourceFetcher p0);
    boolean setMaskVttUrl(String p0);
    void setOnErrorRetryListener(OnErrorRetryListener p0);
    void setRepresentation(int p0);
    void setRepresentation(String p0);
    void setSubtitleSelected(int p0,boolean p1);
    void setSurface(Surface p0);
    void setVodDebugView(IDebugView p0);
    void setVodSubtitleListener(IVodSubtitleListener p0);
    void setWayneBuildData(WayneBuildData p0,String p1);
    void updateDanmakuRect(RectF p0);
    void updateRenderType(KSRenderType p0,KSRenderType p1,float p2);
    void updateVideoContext(WayneVideoContext p0);
    void updateVideoRect(RectF p0);
}
