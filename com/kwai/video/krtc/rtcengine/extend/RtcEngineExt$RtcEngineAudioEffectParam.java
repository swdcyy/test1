package com.kwai.video.krtc.rtcengine.extend.RtcEngineExt$RtcEngineAudioEffectParam;
import java.lang.Object;

public class RtcEngineExt$RtcEngineAudioEffectParam	// class@000852
{
    public int autoTuneScale;
    public int autoTuneTonic;
    public float compressorAttackMs;
    public float compressorGain;
    public float compressorKneeWidth;
    public float compressorRatio;
    public float compressorReleaseMs;
    public float compressorThreshold;
    public float deesserRatio;
    public float deesserThreshold;
    public float dryLevel;
    public float earlyLevel;
    public int echoBeatsPerMeasure;
    public int echoBpm;
    public float echoFeedbackDecay;
    public int echoPingPong;
    public float echoWetDecay;
    public float echoWetGain;
    public boolean enableAutoMix;
    public boolean enableAutoTune;
    public boolean enableDeesser;
    public boolean enableEcho;
    public boolean enableEnsemble;
    public boolean enableHarmony;
    public boolean enableReverb;
    public boolean enableSaturation;
    public float[] ensembleDelayTime;
    public int[] ensembleLfofreq;
    public float[] ensembleRatio;
    public float[] ensembleWidth;
    public float[] equalizerGain;
    public float[] equalizerSendTrackGain;
    public boolean harmonyIsChorus;
    public byte[] harmonyMidi;
    public int harmonyMode;
    public float harmonyRatio;
    public int harmonyTimbre;
    public int harmonyTonality;
    public float mainTrackGain;
    public int midiLength;
    public float preDelay;
    public float reverbDamping;
    public float reverbInputBandWidth;
    public float reverbSpace;
    public float reverbTime;
    public float saturationDriveLevel;
    public float[] saturationEqualizerHcGain;
    public float[] saturationEqualizerLhcGain;
    public float sendTrackGain;
    public float tailLevel;

    public void RtcEngineExt$RtcEngineAudioEffectParam(){
       super();
       this.reverbSpace = 0x41f00000;
       this.preDelay = 20.00f;
       this.reverbTime = 0x3f800000;
       this.reverbDamping = 0x3f000000;
       this.reverbInputBandWidth = 0x3f000000;
       this.dryLevel = 0xbf800000;
       this.earlyLevel = -20.00f;
       this.tailLevel = -20.00f;
       this.compressorRatio = 4.00f;
       this.compressorThreshold = -3.00f;
       this.compressorAttackMs = 6.00f;
       this.compressorReleaseMs = 80.00f;
       this.compressorGain = 0x3f8ccccd;
       this.compressorKneeWidth = 2.00f;
       this.equalizerGain = new float[10]{0,0,0,0,0,0,0,0,0,0};
       this.enableDeesser = false;
       this.deesserThreshold = -39.00f;
       this.deesserRatio = 7.00f;
       this.enableAutoTune = false;
       this.autoTuneTonic = 1;
       this.autoTuneScale = 1;
       this.enableHarmony = false;
       this.harmonyTonality = 1;
       this.harmonyMode = 1;
       this.harmonyTimbre = -2;
       this.harmonyIsChorus = true;
       this.harmonyRatio = 0x3f19999a;
       this.enableEcho = false;
       this.echoPingPong = 0;
       this.echoBpm = 100;
       this.echoBeatsPerMeasure = 4;
       this.echoWetDecay = 0.30f;
       this.echoFeedbackDecay = 0.30f;
       this.echoWetGain = 0;
       this.equalizerSendTrackGain = new float[10]{0,0,0,0,0,0,0,0,0,0};
       this.enableReverb = false;
       this.enableAutoMix = false;
       this.mainTrackGain = 0x3f800000;
       this.sendTrackGain = 0x3f800000;
       byte[] uobyteArray = new byte[0x2710];
       this.harmonyMidi = uobyteArray;
       this.enableEnsemble = false;
       this.ensembleRatio = new float[3]{0x3ef286bd,0x3e86bca2,0x3e86bca2};
       this.ensembleDelayTime = new float[4]{0x3c9374bc,0x3c75c28f,0x3ca3d70a,0x3cbc6a7f};
       this.ensembleWidth = new float[4]{0x3a6bedfa,0x3a83126f,0x3a83126f,0x3a6bedfa};
       this.ensembleLfofreq = new int[4]{7,4,5,6};
       this.enableSaturation = false;
       this.saturationDriveLevel = 10.00f;
       this.saturationEqualizerLhcGain = new float[10]{0xc2b40000,0xc2aa0000,0xc2a00000,0xc28c0000,0xc0e00000,0x40000000,0,0xc0a00000,0xc1200000,0xc2820000};
       this.saturationEqualizerHcGain = new float[10]{0,0,0,0,0,0,0,0xc1200000,0xc1f00000,0xc2700000};
       this.midiLength = 0;
    }
}
